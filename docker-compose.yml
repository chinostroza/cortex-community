# docker-compose.yml
version: '3.8'

services:
  cortex:
    build: .
    image: cortex-community:latest
    container_name: cortex_community
    ports:
      - "4000:4000"
    environment:
      # Phoenix Configuration
      - PHX_HOST=localhost
      - PORT=4000
      - SECRET_KEY_BASE=your-secret-key-base-at-least-64-characters-long-generate-with-mix-phx-gen-secret
      
      # Cortex Core Configuration
      - WORKER_POOL_STRATEGY=local_first
      - HEALTH_CHECK_INTERVAL=30
      - API_KEY_ROTATION_STRATEGY=round_robin
      
      # AI Provider API Keys (add yours here)
      # OpenAI
      - OPENAI_API_KEYS=${OPENAI_API_KEYS:-}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-3.5-turbo}
      
      # Anthropic
      - ANTHROPIC_API_KEYS=${ANTHROPIC_API_KEYS:-}
      - ANTHROPIC_MODEL=${ANTHROPIC_MODEL:-claude-3-sonnet-20240229}
      
      # Google Gemini
      - GEMINI_API_KEYS=${GEMINI_API_KEYS:-}
      - GEMINI_MODEL=${GEMINI_MODEL:-gemini-pro}
      
      # Groq
      - GROQ_API_KEYS=${GROQ_API_KEYS:-}
      - GROQ_MODEL=${GROQ_MODEL:-llama3-8b-8192}
      
      # Cohere
      - COHERE_API_KEYS=${COHERE_API_KEYS:-}
      - COHERE_MODEL=${COHERE_MODEL:-command}
      
      # xAI
      - XAI_API_KEYS=${XAI_API_KEYS:-}
      - XAI_MODEL=${XAI_MODEL:-grok-1}
      
    depends_on:
      - ollama
    networks:
      - cortex_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  ollama:
    image: ollama/ollama:latest
    container_name: cortex_ollama
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0
    networks:
      - cortex_network
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    # Auto-pull models on startup
    command: >
      sh -c "
        ollama serve &
        sleep 5
        ollama pull llama2:latest
        ollama pull mistral:latest
        tail -f /dev/null
      "

networks:
  cortex_network:
    driver: bridge

volumes:
  ollama_data:
    driver: local